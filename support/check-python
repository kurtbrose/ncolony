#!/usr/bin/env python
import itertools
import os
import re
import sys

LOGRE = re.compile(r"\nLOG = _?logging\.getLogger\(__name__\)\n")
NAMESPACE = "from pkgutil import extend_path\n__path__ = extend_path(__path__, __name__)\n"
COPYRIGHT = "# Copyright (C) 2013 -- see CREDITS for copyright holders, LICENSE for license\n"

class Problems(object):
    def __init__(self):
        self.problems = False
    def prime(self, fname):
        self.fname = fname
    def report(self, problem):
        print >>sys.stderr, self.fname, problem
        self.problems = True
    def exit(self):
        if self.problems:
            sys.exit("--Problems detected--")
        else:
            sys.exit()

problems = Problems()

for path in itertools.chain(file("support/paths"),file("support/package")):
    path = path.strip()
    for dirpath, dirnames, fnames in os.walk(path):
        for fname in fnames:
            if not fname.endswith(".py"):
                continue
            fname = os.path.join(dirpath, fname)
            problems.prime(fname)
            contents = file(fname).read()
            if not contents.startswith(COPYRIGHT):
                problems.report("No copyright statement")
            if not fname.endswith('__init__.py') and not LOGRE.search(contents):
                problems.report("No LOG variable")
            if fname.endswith('__init__.py') and NAMESPACE not in contents:
                problems.report("Package is not a namespace")
            for i, line in enumerate(contents.splitlines()):
                if line.endswith(" ") or line.endswith("\t"):
                    problems.report("Line %d: trailing whitespace" % i)

problems.exit()
